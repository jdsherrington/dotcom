---
import BaseLayout from "../layouts/BaseLayout.astro";
import FeaturedBlogPost from "../components/FeaturedBlogPost.astro";
import BlogPost from "../components/BlogPost.astro";

import { slide } from "astro:transitions";

// import { getCollection } from "astro:content";
// const allPosts = await getCollection("posts");

const [featuredPost, ...allPosts] = (await Astro.glob("./blog/*.md")).sort(
	(a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date)
);
const pageTitle = "Blog";
---

<BaseLayout pageTitle={pageTitle}>
	<section
		class="grid grid-cols-[auto] grid-rows-[min-content] items-start w-[var(--full-w)] gap-[var(--guide-gutter)] pb-96"
	>
		<div
			id="post-list"
			class="sm:w-[--full-w] grid sm:grid-cols-[1fr] md:grid-cols-2 lg:grid-cols-3 grid-flow-row gap-[var(--guide-gutter)] place-self-center"
		>
			<FeaturedBlogPost
				title={featuredPost.frontmatter.title}
				description={featuredPost.frontmatter.description}
				date={featuredPost.frontmatter.date}
				url={featuredPost.url}
				tags={featuredPost.frontmatter.tags}
				imagePath={featuredPost.frontmatter.imagePath}
				imageAlt={featuredPost.frontmatter.imageAlt}
				accentColor={featuredPost.frontmatter.accentColor}
			/>
			{
				allPosts.map((post) => (
					<BlogPost
						title={post.frontmatter.title}
						description={post.frontmatter.description}
						date={post.frontmatter.date}
						url={post.url}
						tags={post.frontmatter.tags}
						imagePath={post.frontmatter.imagePath}
						imageAlt={post.frontmatter.imageAlt}
						accentColor={post.frontmatter.accentColor}
					/>
				))
			}
			<!-- <div
				class="blog-newsletter w-full h-full bg-[hsl(var(--foreground)/0.02)] border-2 border-foreground/10 rounded-lg min-h-[calc(var(--one-w)*1.5)]"
			>
				<span>Testing</span>
			</div> -->
		</div>
	</section>
</BaseLayout>

<!-- <script>
	function adjustColSpan() {
		const postList = document.querySelector("#post-list") as HTMLElement;
		const allPosts = postList.children;
		const columns = getComputedStyle(postList)
			.getPropertyValue("grid-template-columns")
			.split(" ").length;
		console.log(columns);

		const spanAmount = columns - ((allPosts.length - 2) % columns);
		console.log("Columns", columns);
		console.log("Posts length", allPosts.length - 2);
		console.log("LastRowItem", spanAmount);

		// clear any previous col-span classes before adding new ones
		allPosts[allPosts.length - 1].classList.remove(
			"sm:col-span-1",
			"md:col-span-2",
			"md:col-span-3"
		);
		if (columns == 1) {
			allPosts[allPosts.length - 1].classList.add(`sm:col-span-1`);
		} else {
			allPosts[allPosts.length - 1].classList.add(
				`md:col-span-${spanAmount}`
			);
		}
	}

	window.addEventListener("resize", adjustColSpan);
	window.addEventListener("load", adjustColSpan);
</script> -->
