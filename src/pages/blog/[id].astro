---
import { getCollection, render } from "astro:content";
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import { Icon } from "astro-icon/components";

import BaseLayout from "@/layouts/BaseLayout.astro";
import CardTag from "@/components/CardTag.astro";
import NavigationButton from "@/components/NavigationButton.astro";
import { extractOKLCHColors } from "@/lib/extractOKLCHColors";

export async function getStaticPaths() {
	const posts = await getCollection("blog");
	return posts.map((post) => ({
		params: { id: post.id },
		props: { post },
	}));
}

const { post } = Astro.props;
const { Content } = await render(post);

const formattedDate = new Date(post.data.date).toLocaleDateString("en-AU", {
	year: "numeric",
	month: "short",
	day: "2-digit",
});

const accentPalette: any = await extractOKLCHColors(post.data.imagePath);
const accent = accentPalette[0];

let readTime = 0;
if (post.data.wordCount) {
	readTime = Math.round(post.data.wordCount / 250);
}

const images = import.meta.glob<{ default: ImageMetadata }>(
	"/src/assets/blog/posts/*.{jpeg,jpg,png,gif,webp}",
);

if (!images[post.data.imagePath]) {
	throw new Error(
		`"${post.data.imagePath}" does not exist in glob: "src/assets/blog/posts/*"`,
	);
}

const rawContent = Astro.slots.has("default")
	? await Astro.slots.render("default")
	: "";

const headingRegex = /<h([1-2])[^>]*>(.*?)<\/h\1>/gi;
const headings = [];
let match;

while ((match = headingRegex.exec(rawContent)) !== null) {
	const headingLevel = `${match[1]}`;
	const headingText = match[2].trim();
	headings.push([headingLevel, headingText]);
}
---

<BaseLayout pageTitle={post.data.title}>
	<div
		class="blog-page w-col-full gap-gutter relative flex flex-col place-items-center content-start place-self-center rounded"
		data-accent={accent}
	>
		<div
			id=`blog-post-image-${post.id}`
			transition:name=`blog-post-image-${post.id}`
			class="blog-page-banner rounded-base sm:h-col-3 lg:h-col-5 absolute top-0 left-0 w-full overflow-hidden transition-all duration-500 ease-in-out"
		>
			<Image
				src={images[post.data.imagePath]()}
				alt={post.data.imageAlt}
			/>
			<NavigationButton class="arrow-left absolute top-0 left-0" />
		</div>
		<div class="blog-page-body">
			<div class="blog-page-sidebar">
				<div class="blog-page-thumbnail">
					<Image
						src={images[post.data.imagePath]()}
						alt={post.data.imageAlt}
					/>
					<NavigationButton
						class="arrow-left m-gutter-1/2 bg-background-midpoint/50 text-foreground/80 md:hover:text-accent-foreground md:hover:bg-accent-background/50 absolute top-0 left-0 rounded-sm py-3 pr-4 pl-3.5 backdrop-blur-xl transition-all duration-300 ease-in-out *:h-3.5"
					/>
				</div>
				<div class="blog-page-sidebar-info">
					<h1
						id=`blog-post-title-${post.id}`
						transition:name=`blog-post-title-${post.id}`
						class="blog-page-title"
					>
						{post.data.title}
					</h1>
					<p
						id=`blog-post-date-${post.id}`
						transition:name=`blog-post-date-${post.id}`
						class="blog-page-date"
					>
						{formattedDate} // {readTime} min read
					</p>
					<div
						id=`blog-post-tags-${post.id}`
						transition:name=`blog-post-tags-${post.id}`
						class="blog-page-tags"
					>
						{
							post.data.tags?.map((tag: any) => (
								<CardTag text={tag} collection="blog" />
							))
						}
					</div>
					<!-- <div class="blog-page-share"> -->
					<!-- 	<div class="blog-page-share-copy"> -->
					<!-- 		<span>Share</span> -->
					<!-- 		<a class="copy-link" -->
					<!-- 			><Icon name="social/copylink" /></a -->
					<!-- 		> -->
					<!-- 	</div> -->
					<!-- 	<div class="blog-page-share-socials"> -->
					<!-- 		<a class="x-link"><Icon name="social/x" /></a> -->
					<!-- 		<a class="threads-link" -->
					<!-- 			><Icon name="social/threads" /></a -->
					<!-- 		> -->
					<!-- 		<a class="bluesky-link" -->
					<!-- 			><Icon name="social/bluesky" /></a -->
					<!-- 		> -->
					<!-- 		<a class="reddit-link" -->
					<!-- 			><Icon name="social/reddit" /></a -->
					<!-- 		> -->
					<!-- 		<a class="linkedin-link" -->
					<!-- 			><Icon name="social/linkedin" /></a -->
					<!-- 		> -->
					<!-- 	</div> -->
					<!-- </div> -->
					<div class="blog-page-toc">
						<div class="scroll-progress"></div>
						<ul>
							{
								headings.map(([level, text]) => (
									<a
										href={`#${text.replace(/\s+/g, "-").toLowerCase()}`}
									>
										<li class={`toc-heading`}>{text}</li>
									</a>
								))
							}
						</ul>
					</div>
				</div>
			</div>
			<div class="post-markdown">
				<Content />
			</div>
		</div>
	</div>
</BaseLayout>

<style is:global>
	@reference "@/styles/global.css";
	.blog-page-banner {
		@apply rounded-base sm:h-col-3 lg:h-col-5 absolute top-0 left-0 w-full overflow-hidden transition-all duration-500 ease-in-out;

		transition:
			height 100ms ease,
			opacity 500ms ease-in-out;
	}

	body.scrolled .blog-page-banner {
		@apply sm:opacity-100 lg:opacity-25;
	}

	.blog-page-banner img {
		@apply rounded-base h-full w-full object-cover opacity-80 transition-all duration-300 ease-in-out;
	}

	body.scrolled .blog-page-banner img {
		@apply lg:scale-110 lg:blur-xl;
	}

	.blog-page-body {
		--details-width: 50%;
		@apply grid max-w-full transition-all duration-300 ease-in-out sm:grid-cols-1 sm:gap-[calc(var(--col-gutter)*1)] sm:pt-0 lg:grid-cols-[minmax(var(--details-width),1fr)_auto] lg:gap-[calc(var(--col-gutter)*2)] lg:pt-[calc(var(--col-5)+(var(--col-gutter)*0.5))];
	}

	body.scrolled .blog-page-body {
		--details-width: 330px;
	}

	.blog-page-sidebar {
		@apply lg:pt-gutter flex h-min flex-col transition-all duration-500 ease-in-out sm:relative sm:top-0 lg:sticky lg:top-[calc(var(--nav-height)+(var(--col-gutter)))];
	}

	.blog-page-sidebar-info {
		@apply sm:px-gutter inline-flex flex-col sm:place-items-start lg:place-items-end lg:px-2;
	}

	.blog-page-thumbnail {
		@apply rounded-base relative h-auto w-full overflow-hidden transition-all duration-500 ease-in-out lg:place-items-end;
	}

	.blog-page-thumbnail .navigation-button {
		@apply opacity-0;
		transition:
			opacity 300ms 500ms ease-in-out,
			fill 300ms ease-in-out,
			stroke 300ms ease-in-out,
			color 300ms ease-in-out,
			background 300ms ease-in-out;
	}

	body.scrolled .blog-page-thumbnail .navigation-button {
		@apply sm:opacity-0 lg:opacity-100;
	}

	.blog-page-thumbnail img {
		@apply rounded-base mb-gutter h-col-3 w-full object-cover transition-all duration-500 ease-in-out sm:opacity-0 lg:-mt-[calc(var(--col-3)+var(--col-gutter))] lg:opacity-0;

		transition:
			opacity 200ms ease-in-out,
			margin-top 300ms 100ms ease;
	}

	body.scrolled .blog-page-thumbnail img {
		@apply sm:h-col-3 lg:mt-0 lg:opacity-80;

		transition:
			opacity 300ms 150ms ease-in-out,
			margin-top 300ms ease;
	}

	.blog-page-title {
		@apply text-foreground/90 z-20 mb-1.5 inline-block w-auto transform-none font-bold tracking-tight text-pretty transition-all duration-500 ease-in-out sm:text-left sm:text-3xl md:text-3xl lg:text-right lg:text-4xl;
	}

	body.scrolled .blog-page-title {
		@apply sm:text-3xl md:text-3xl;
	}

	.blog-page-date {
		@apply text-foreground/50 z-20 mb-2.5 w-auto font-mono text-xs tracking-widest uppercase transition-all duration-200 ease-in-out sm:text-left lg:text-right;
	}

	.blog-page-tags {
		@apply mb-3 w-auto flex-wrap sm:justify-start lg:justify-end;
	}

	.blog-page-share {
		@apply bg-foreground/0 text-foreground/50 rounded-base mb-5 inline-flex w-auto place-items-center px-1 font-mono tracking-wide uppercase duration-200 sm:h-9 sm:justify-start md:h-7 lg:justify-end;
	}

	.blog-page-share-copy {
		@apply border-r-foreground/20 inline-flex w-auto place-items-center gap-3 border-r pr-3.5;
	}

	.blog-page-share-socials {
		@apply inline-flex w-auto place-items-center gap-4 pl-3.5;
	}

	.blog-page-share span {
		@apply text-xs tracking-wider select-none;
	}

	.blog-page-share svg {
		@apply cursor-pointer duration-200 sm:text-xl md:text-lg;
	}

	.copy-link {
		@apply hover:text-foreground;
	}

	.x-link {
		@apply hover:text-foreground;
	}

	.threads-link {
		@apply hover:text-foreground;
	}

	.bluesky-link {
		@apply hover:text-[oklch(63.55%_0.1974_254.71)];
	}

	.reddit-link {
		@apply hover:text-[oklch(66.02%_0.2293_35.4)];
	}

	.linkedin-link {
		@apply hover:text-[oklch(54.58%_0.1301_242.27)];
	}

	.blog-page-toc {
		@apply rounded-base sm:mx-gutter relative z-50 w-auto overflow-hidden px-0 text-xs transition-all duration-300 ease-in-out sm:hidden lg:mx-0 lg:inline-block;
	}

	body.scrolled .blog-page-toc {
		@apply px-2 lg:mx-2;
	}

	.scroll-progress {
		@apply bg-accent/25 absolute h-full w-[var(--radius)] opacity-0 transition-opacity duration-300 ease-in-out sm:left-0 sm:rounded-l-lg sm:rounded-r-none lg:right-0 lg:left-auto lg:rounded-l-none lg:rounded-r-lg;

		--scroll-progress: 0%;
	}

	body.scrolled .scroll-progress {
		@apply w-[var(--radius)] opacity-100;
	}

	.scroll-progress::after {
		content: "";
		@apply bg-accent absolute top-0 h-full w-full rounded-[inherit] sm:left-0 lg:right-0 lg:left-auto;

		transform: translate(0, calc(-100% + var(--scroll-progress)));
	}

	.blog-page-toc ul {
		@apply flex flex-col gap-0.5 sm:place-items-start lg:place-items-end;
	}

	.blog-page-toc ul a {
		@apply inline-block px-0 leading-none transition-all duration-150 ease-in-out lg:text-right;
	}

	body.scrolled .blog-page-toc ul a {
		@apply px-2;
	}

	.blog-page-toc ul li {
		@apply hover:bg-accent-background/50 hover:text-accent-foreground active:bg-accent-foreground/50 rounded-base inline-block leading-normal transition-all duration-150 ease-in-out sm:text-left lg:text-right;
	}

	.toc-heading {
		@apply text-foreground/50 px-2.5 py-1.5 font-mono font-normal tracking-wide uppercase;
	}

	.blog-page-nav-arrow {
		@apply mt-gutter absolute top-0 left-0 ml-[var(--col-gutter)] cursor-pointer place-self-end !fill-[oklch(var(--dark-bg)/0.5)] hover:!fill-[oklch(var(--dark-bg)/0.8)] sm:h-6 md:h-5;
	}

	.post-markdown {
		@apply sm:text-foreground sm:px-gutter relative z-50 w-full max-w-[var(--article-width)] min-w-0 transition-all duration-500 ease-in-out sm:pt-0 lg:px-0 lg:pt-[calc(var(--col-gutter)+4px)];
	}

	::-moz-selection {
		/* Code for Firefox */
		@apply bg-accent-background text-accent-foreground;
	}

	::selection {
		@apply bg-accent-background text-accent-foreground;
	}

	@keyframes headerHighlightFade {
		0% {
			background-color: oklch(var(--accent) / 25);
			color: oklch(var(--accent-foreground));
		}

		50% {
			background-color: oklch(var(--accent) / 25);
			color: oklch(var(--accent-foreground));
		}

		100% {
			background-color: transparent;
			color: transparent;
		}
	}

	.post-markdown .header-highlight {
		animation: headerHighlightFade 2s ease !important;
	}

	.post-markdown p {
		font-size: 1rem;
		font-weight: normal;
		line-height: 1.5;
		margin-bottom: 1.5rem;
	}

	.post-markdown h1 {
		font-size: 2rem;
		font-weight: 700;
		margin-bottom: 0.7rem;
		scroll-margin-top: calc(var(--nav-height) + (var(--col-gutter) * 2));
	}

	.post-markdown h2 {
		font-size: 1.25rem;
		font-weight: 500;
		margin-bottom: 0.8rem;
		scroll-margin-top: calc(var(--nav-height) + (var(--col-gutter) * 2));

		@apply rounded-base -ml-3 py-1 pl-3 font-bold;
	}

	.post-markdown h3 {
		font-size: 0.9rem;
		font-weight: 500;
		margin-bottom: 0.7rem;
		scroll-margin-top: calc(var(--nav-height) + (var(--col-gutter) * 2));
		@apply text-accent-foreground font-mono text-sm tracking-wider uppercase;
	}

	.post-markdown h4 {
		font-size: 1.3rem;
		font-weight: 700;
		scroll-margin-top: calc(var(--nav-height) + (var(--col-gutter) * 2));
	}

	.post-markdown h5 {
		font-size: 1.3rem;
		font-weight: 700;
		scroll-margin-top: calc(var(--nav-height) + (var(--col-gutter) * 2));
	}

	.post-markdown h6 {
		font-size: 0.9rem;
		font-weight: 700;
		scroll-margin-top: calc(var(--nav-height) + (var(--col-gutter) * 2));
	}

	.post-markdown ul,
	.post-markdown ol {
		margin-bottom: 1.75rem;
		@apply list-inside;
	}

	.post-markdown ul > li {
		@apply mb-3 list-["---_"];
	}

	.post-markdown ::marker {
		@apply text-foreground/50 font-mono text-sm;
	}

	@counter-style padded-numbers {
		system: numeric;
		symbols: "00" "01" "02" "03" "04" "05" "06" "07" "08" "09" "10";
		suffix: " // ";
	}

	.post-markdown ol > li {
		@apply mb-3 list-[padded-numbers];
	}

	.post-markdown ul ul {
		@apply mt-2 ml-6;
	}

	.post-markdown ul ul > li {
		@apply list-["--_"];
	}

	.post-markdown ul ul ul > li {
		@apply list-["-_"];
	}

	.post-markdown pre {
		word-wrap: break-word;

		@apply !font-code rounded-base p-gutter relative mb-8 !bg-[oklch(var(--foreground)/0.025)] break-words whitespace-pre-wrap;
	}

	code {
		@apply !font-code text-sm;
	}

	.post-markdown pre::before,
	.post-markdown blockquote::before {
		content: "";
		mask: radial-gradient(
			400px circle at var(--x) var(--y),
			rgb(39, 26, 26) -50%,
			rgba(0, 0, 0, 0) 50%
		);

		@apply bg-accent-background pointer-events-none absolute top-0 left-0 h-full w-full opacity-0 transition-opacity duration-300 ease-in-out md:hover:opacity-25;
	}

	.post-markdown pre::after,
	.post-markdown blockquote::after {
		content: "";
		background: radial-gradient(
				200px circle at var(--x) var(--y),
				oklch(var(--accent)) 0%,
				transparent 100%
			)
			border-box;
		mask:
			linear-gradient(#fff 0 0) padding-box,
			linear-gradient(#fff 0 0);
		mask-composite: exclude;

		@apply rounded-base pointer-events-none absolute inset-0 z-20 w-full border border-transparent opacity-50 transition-opacity duration-300 ease-in-out md:hover:opacity-100;
	}

	.post-markdown blockquote::after {
		@apply !rounded-l-none;
	}

	.post-markdown hr {
		@apply border-foreground/10 mt-12 mb-8;
	}

	.post-markdown blockquote {
		border-left: var(--radius) solid oklch(var(--accent));
		@apply rounded-base relative mb-6 bg-[oklch(var(--foreground)/0.025)] p-4;
	}

	.post-markdown blockquote p {
		@apply text-foreground text-sm;
	}

	.post-markdown blockquote * {
		margin-bottom: 0rem;
	}

	.post-markdown blockquote > blockquote {
		margin-top: 1rem;
	}

	:root[data-theme="dark"] .astro-code,
	:root[data-theme="dark"] .astro-code span {
		color: var(--shiki-dark) !important;
		/* Optional, if you also want font styles */
		font-style: var(--shiki-dark-font-style) !important;
		font-weight: var(--shiki-dark-font-weight) !important;
		text-decoration: var(--shiki-dark-text-decoration) !important;
	}
</style>

<script is:inline>
	window.onscroll = function () {
		scrollProgress();
	};

	function scrollProgress() {
		let scroll =
			document.querySelector(".post-markdown").scrollTop ||
			document.documentElement.scrollTop;
		let height =
			document.documentElement.scrollHeight -
			document.documentElement.clientHeight;
		let scrolled = (scroll / height) * 100;
		document
			.querySelector(".scroll-progress")
			.style.setProperty("--scroll-progress", `${scrolled}%`);
	}
</script>

<script is:inline>
	document.querySelectorAll(".blog-page-toc a").forEach((anchor) => {
		anchor.addEventListener("click", function (e) {
			e.preventDefault();

			const targetId = this.getAttribute("href").slice(1);
			const targetElement = document.getElementById(targetId);

			if (targetElement) {
				targetElement.scrollIntoView({
					behavior: "smooth",
					block: "start",
				});

				const observer = new IntersectionObserver((entries) => {
					entries.forEach((entry) => {
						if (entry.isIntersecting) {
							targetElement.classList.remove("header-highlight");

							void targetElement.offsetWidth;

							targetElement.classList.add("header-highlight");

							setTimeout(() => {
								targetElement.classList.remove(
									"header-highlight",
								);

								console.log("Header test");
							}, 2000);

							observer.disconnect();
						}
					});
				});

				observer.observe(targetElement);
			}
		});
	});
</script>

<script data-astro-rerun>
	const attachEventListeners = () => {
		const page = document.querySelector(".blog-page");

		const html = document.querySelector("html");
		if (
			localStorage.getItem("theme") === "dark" ||
			localStorage.getItem("theme") === "light"
		) {
			html.style.setProperty("--accent", `${page.dataset.accent}`);
		}
	};

	attachEventListeners();

	document.addEventListener("astro:after-swap", () => {
		attachEventListeners();
	});
</script>
