---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import BlogPost from "../../../components/BlogPost.astro";

export async function getStaticPaths() {
	const allPosts = await Astro.glob("../*.md");

	const uniqueTags = [
		...new Set(
			allPosts
				.map(
					(post: { frontmatter: { tags: any } }) =>
						post.frontmatter.tags
				)
				.flat()
		),
	];

	return uniqueTags.map((tag: any) => {
		const filteredPosts = allPosts.filter(
			(post: { frontmatter: { tags: string | any[] } }) =>
				post.frontmatter.tags.includes(tag)
		);
		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	});
}

const { tag } = Astro.params;
const {
	posts,
}: {
	posts: {
		url: string;
		frontmatter: {
			pubDate: string;
			description: string;
			title: string;
			tags: string[];
			imagePath: string;
			imageAlt: string;
			accentColor: string;
		};
	}[];
} = Astro.props;
const filteredPosts = posts.filter((post) =>
	post.frontmatter.tags?.includes(tag)
);
---

<BaseLayout pageTitle={tag}>
	<p>Posts tagged with <strong>{tag}</strong></p>
	<br />

	<section
		class="grid grid-rows-[min-content_100%] items-start w-[var(--full-w)] gap-12 pb-48"
	>
		<div
			class="w-[--two-thirds-w] grid xl:grid-cols-1 grid-flow-row gap-[var(--guide-gutter)]"
		>
			{
				posts.map((post) => (
					<BlogPost
						title={post.frontmatter.title}
						desc={post.frontmatter.description}
						date={post.frontmatter.pubDate}
						url={post.url}
						tags={post.frontmatter.tags}
						imagePath={post.frontmatter.imagePath}
						imageAlt={post.frontmatter.imageAlt}
						accentColor={post.frontmatter.accentColor}
					/>
				))
			}
		</div>
	</section>
</BaseLayout>
