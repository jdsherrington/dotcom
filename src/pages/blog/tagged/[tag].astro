---
import BaseLayout from "@/layouts/BaseLayout.astro";
import BlogCard from "@/components/BlogCard.astro";
import NavigationButton from "@/components/NavigationButton.astro";

export async function getStaticPaths() {
	const allPosts = (await Astro.glob("../*.md")).sort(
		(a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date),
	);

	const uniqueTags = [
		...new Set(
			allPosts
				.map(
					(post: { frontmatter: { tags: any } }) =>
						post.frontmatter.tags,
				)
				.flat(),
		),
	];

	return uniqueTags.map((tag: any) => {
		const filteredPosts = allPosts.filter(
			(post: { frontmatter: { tags: string | any[] } }) =>
				post.frontmatter.tags.includes(tag),
		);
		const cleanedTag = tag.toLowerCase().replaceAll(" ", "-");
		return {
			params: { tag: cleanedTag },
			props: { posts: filteredPosts },
		};
	});
}

const { tag } = Astro.params;
const {
	posts,
}: {
	posts: {
		url: string;
		frontmatter: {
			title: string;
			description: string;
			date: string;
			url: string;
			tags: string[];
			imagePath: string;
			imageAlt: string;
			accentColor: string;
			wordCount: number;
			type: string;
		};
	}[];
} = Astro.props;
---

<BaseLayout
	pageTitle=`JDS - ${tag.toLowerCase().replace(/\b(\s\w|^\w)/g, function (text: any) { return text.toUpperCase(); })} Posts`
	`
>
	<section class="place-self-center sm:w-[var(--full-w)]">
		<div class="tag-controls flex place-items-center">
			<NavigationButton direction="back" />
			<span
				class="card-tag flex cursor-default select-none gap-0.5 bg-foreground/10"
				>{tag.replaceAll("-", " ")}<a href="/blog" class="p-1.5 pr-0.5"
					><svg
						xmlns="http://www.w3.org/2000/svg"
						width="24"
						height="24"
						viewBox="0 0 24 24"
						stroke-width="3"
						stroke-linecap="round"
						stroke-linejoin="round"
						class="tag-close-button"
					>
						<path d="M 18 6 L 6 18 M 6 6 L 18 18"></path>
					</svg></a
				>
			</span>
		</div>
		<div class="mt-[var(--guide-gutter)] grid items-start gap-12 pb-48">
			<div
				class="grid grid-flow-row gap-[var(--guide-gutter)] place-self-center sm:w-[--full-w] sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3"
			>
				{
					posts.map((post) => (
						<BlogCard
							title={post.frontmatter.title}
							description={post.frontmatter.description}
							date={post.frontmatter.date}
							url={post.url}
							tags={post.frontmatter.tags}
							imagePath={post.frontmatter.imagePath}
							imageAlt={post.frontmatter.imageAlt}
							accentColor={post.frontmatter.accentColor}
							wordCount={post.frontmatter.wordCount}
							type="standard"
						/>
					))
				}
			</div>
		</div>
	</section>
</BaseLayout>

<style is:global>
	.tag-close-button {
		@apply fill-none stroke-foreground/50 duration-200 ease-in-out hover:stroke-red-600 sm:w-5 md:w-4;
	}

	.tag-controls {
		@apply h-9;
	}

	.tag-controls .card-tag {
		@apply h-full py-0;
	}

	.tag-controls .navigation-button {
		@apply h-full bg-accent-foreground/5 py-0 text-foreground/50 hover:bg-accent-foreground/10 hover:text-foreground;
	}

	span:has(.tag.close-button) {
		@apply !text-accent-foreground/80;
	}

	span:has(.tag-close-button:hover) {
		@apply bg-red-600/10;
	}
</style>
