---
import ThemeDrawer from "@/components/ThemeDrawer.astro";
import NavigationButton from "@/components/NavigationButton.astro";
import { Icon } from "astro-icon/components";

interface Props {
	pageTitle: string;
}
const { pageTitle } = Astro.props;
---

<header
	transition:persist="header"
	id="header"
	class="group w-col-full border-border-background h-nav pointer-events-none top-0 z-1001 flex items-start justify-center"
>
	<div
		id="header-value-store"
		style="width: calc(var(--col-gutter) + var(--col-1)); height: var(--col-1); padding: calc(var(--col-gutter) * 1); margin: calc(var(--col-gutter) * 0.5);"
	>
	</div>
</header>
<div
	id="mobile-header"
	class="rounded-base *:border-foreground/10 *:bg-background-midpoint *:!text-foreground/80 *:rounded-base p-gutter-1/2 absolute top-0 left-0 flex h-min w-full flex-row gap-1 border-t-0 bg-red-500/10 opacity-0 transition-all duration-300 ease-in-out *:border *:shadow-lg *:shadow-black/10 *:blur-none sm:pointer-events-auto in-[.scrolled]:sm:opacity-100 md:pointer-events-none in-[.scrolled]:md:opacity-0"
>
	<span
		id="mobile-header-page-title"
		class="flex w-full max-w-full items-center overflow-hidden px-4 py-2.5 align-middle font-mono text-sm leading-snug tracking-wider text-ellipsis uppercase"
	></span>
</div>

<nav
	id="desktop-nav"
	transition:persist="nav"
	class="rounded-base border-border-background linear pointer-events-auto fixed top-0 z-1000 flex w-[calc(var(--col-full)-2px)] items-center border-b shadow-2xl shadow-transparent [transition:padding_0ms_ease-in-out,background-color_0ms,ease-in-out,height_0ms_ease-in-out] before:absolute before:inset-0 before:w-full before:backdrop-blur-2xl sm:justify-center md:justify-between"
	style="padding-top: calc((var(--col-gutter)*1) - 1px); padding-bottom: calc((var(--col-gutter)*1) - 2px); padding-left: calc((var(--col-gutter)*1)); padding-right: calc((var(--col-gutter)*1)); background-color: oklch(var(--background-header)/0); height: calc(var(--col-1) + var(--col-gutter))"
>
	<a
		href="/"
		class="border-border-background relative isolate flex h-full w-auto gap-0.5 transition-colors duration-300 ease-in-out sm:flex-row sm:items-center in-[.scrolled]:sm:opacity-0 in-[.scrolled]:sm:blur-md md:items-center md:justify-items-center in-[.scrolled]:md:opacity-100 in-[.scrolled]:md:blur-none xl:flex-col xl:items-start"
	>
		<!--	<Icon class="header-logo" name="header" /> -->

		<svg
			class="fill-border-foreground group/logo top-0 left-0 z-50 inline-block h-8 w-auto py-0.5 pl-2 transition-colors duration-300 ease-in-out xl:pt-1"
			xmlns="http://www.w3.org/2000/svg"
			viewBox="0 0 98 22"
		>
			<!-- <path -->
			<!-- 	id="header-logo" -->
			<!-- 	class="[stroke-width:var(--logo-stroke)] transition-discrete in-[.theme-source]:hidden" -->
			<!-- 	d="M 140 72 C 140 72 140 120.281 140 132 C 150 132 322 132 324 132 C 338 132 348 122.625 348 109.5 C 348 107.625 348 96.375 348 94.5 C 348 81.375 338 72 324 72 C 322 72 294 72 292 72 C 278 72 268 62.625 268 49.5 C 268 47.625 268 36.374 268 34.5 C 268 21.374 278 12 292 12 C 293.22 12 322.562 12 324 12 C 338 12 356 12 360 12 M 220 83.249 C 220 81.375 220 59.344 220 57 C 220 30.749 200 12 172 12 C 169.5 12 118.5 12 116 12 C 102 12 92 21.374 92 34.5 L 92 109.5 C 92 122.625 82 132 68 132 C 65.5 132 38.5 132 36 132 C 22 132 12 122.625 12 109.5 L 12 72" -->
			<!-- 	fill="none"></path> -->

			<g
				id="header-logo"
				class="transition-discrete in-[.theme-source]:hidden"
				transform="matrix(1, 0, 0, 1, -160, -272)"
				style=""
			>
				<path
					class=""
					d="M 186 281 L 192 283 L 192 288 L 200 288 L 200 294 L 192 294 L 186 294 L 186 281 Z M 160 278 L 160 272 L 204 272 C 207 272 210 275 210 278 L 210 286 C 210 288 212 288 212 288 L 229 288 C 233 288 230 281 230 281 L 236 283 C 236 283 237 285 237 288 C 237 291 234 294 231 294 L 210 294 C 207 294 204 291 204 288 L 204 280 C 204 280 204 278 202 278 L 160 278 Z M 176 281 L 182 283 L 182 288 C 182 291 179 294 176 294 L 160 294 L 160 288 L 174 288 C 174 288 176 288 176 286 L 176 281 Z M 237 272 L 237 278 L 222 278 C 218 278 221 284 221 284 L 215 283 C 215 283 214 281 214 278 C 214 275 217 272 220 272 L 237 272 Z"
					style="stroke: none"></path>
				<path
					class="group-hover/logo:fill-accent-foreground fill-accent group-hover/logo:ease-flicker transition-colors duration-300 ease-in-out"
					d="M 244 280 L 247 272 L 250 280 L 258 283 L 250 286 L 247 294 L 244 286 L 236 283 L 244 280 Z"
					style="stroke: none"
				>
				</path>
			</g>

			<g
				id="header-logo-source"
				class="hidden transition-discrete in-[.theme-source]:block"
				transform="matrix(1, 0, 0, 1, -159.000015, -272)"
				style=""
			>
				<path
					d="M 185 281 L 188 281 L 188 283 L 191 283 L 191 288 L 199 288 L 199 291 L 199 294 L 185 294 L 185 281 Z M 159 278 L 159 272 L 204 272 L 204 274 L 207 274 L 207 277 L 209 277 L 209 288 L 231 288 L 231 284 L 228 284 L 228 281 L 233 281 L 233 284 L 235 284 L 235 286 L 236 286 L 236 290 L 234 290 L 234 292 L 232 292 L 232 294 L 208 294 L 208 292 L 205 292 L 205 289 L 203 289 L 203 278 L 159 278 Z M 175 281 L 178 281 L 178 283 L 181 283 L 181 289 L 179 289 L 179 292 L 176 292 L 176 294 L 159 294 L 159 291 L 159 288 L 175 288 L 175 281 Z M 236 272 L 236 278 L 220 278 L 218 278 L 218 281 L 221 281 L 221 284 L 217 284 L 216 284 L 216 281 L 213 281 L 213 276 L 215 276 L 215 274 L 217 274 L 217 272 L 236 272 Z"
					style="stroke: none"></path>
				<path
					class="group-hover/logo:fill-accent-foreground fill-accent group-hover/logo:ease-flicker transition-colors duration-300 ease-in-out"
					d="M 243 275 L 245 275 L 245 272 L 247 272 L 247 275 L 249 275 L 249 280 L 254 280 L 254 282 L 257 282 L 257 284 L 254 284 L 254 286 L 249 286 L 249 291 L 247 291 C 247 291.475 247 294 247 294 L 245 294 L 245 291 L 243 291 L 243 286 L 238 286 L 238 284 L 235 284 C 235 283.146 235 282 235 282 L 238 282 L 238 280 L 243 280 L 243 275 Z"
					style="stroke: none"
				>
				</path>
			</g>
			<!-- <path -->
			<!-- 	id="header-logo-source" -->
			<!-- 	class="hidden [stroke-width:var(--logo-stroke)] transition-discrete in-[.theme-source]:block" -->
			<!-- 	d="M 196 54 C 196 53.339 196 35.567 196 24 M 140 72 C 140 72 140 120.281 140 132 C 150 132 348 132 348 132 C 348 132 348 122.625 348 109.5 C 348 107.625 348 72 348 72 C 348 72 338 72 324 72 C 322 72 268 72 268 72 C 268 72 268 62.625 268 49.5 C 268 47.625 268 12 268 12 C 268 12 278 12 292 12 C 293.22 12 322.562 12 324 12 C 338 12 356 12 360 12 M 220 84 C 220 83.339 220 65.567 220 54 M 184 12 L 92 12 L 92 132 L 12 132 L 12 72" -->
			<!-- 	fill="none"></path> -->
		</svg>
		<small class="text-border-foreground text-2xs pl-1.5 font-mono"
			>// 0.1.18</small
		>
	</a>

	<div
		id="desktop-nav-items"
		class="border-border-background relative h-full items-center gap-0 border sm:hidden md:flex"
	>
		<a class="desktop-nav-button desktop-nav-link" href="/blog">Blog</a>
		<a class="desktop-nav-button desktop-nav-link" href="/projects"
			>Projects</a
		>
		<a class="desktop-nav-button desktop-nav-link" href="/resources"
			>Resources</a
		>
		<a
			id="desktop-theme-menu-btn"
			class="desktop-nav-button menu-btn group/menu text-foreground/70 [.open]:bg-accent-foreground before:bg-glow-btn before:rounded-base after:menu-btn-border border-foreground/0 [.open]:border-foreground/5 peer relative border p-0 px-3 py-3 font-mono uppercase before:pointer-events-none before:absolute before:top-0 before:left-0 before:h-full before:w-full before:opacity-0 before:transition-opacity before:duration-300 before:ease-in-out before:content-[''] after:opacity-0 hover:before:opacity-100 [.open]:after:opacity-80"
		>
			<svg
				id="desktop-theme-menu-icon"
				class="fill-foreground stroke-foreground in-[.open]:fill-accent-background in-[.open]:stroke-accent-background h-[20px] w-[20px] scale-100 opacity-60 transition-all duration-200 ease-in-out in-[.open]:rotate-90"
				viewBox="0 0 24 24"
				fill="currentColor"
				stroke="currentColor"
				stroke-width="2"
			>
				<g
					transform="matrix(1, 0, 0, 1, -204.615997, -72.276001)"
					style="transform-origin: 204.616px 72.276px;"
				>
					<path
						d="M 227.616 84.276 C 227.616 90.351 222.692 95.276 216.616 95.276 C 210.541 95.276 205.616 90.351 205.616 84.276 C 205.616 78.201 210.541 73.276 216.616 73.276 C 222.692 73.276 227.616 78.201 227.616 84.276 Z"
						style="fill: none; stroke-width: 2px;"></path>
					<path
						d="M 216.617 78.276 C 219.93 78.276 222.617 80.962 222.617 84.276 C 222.617 87.59 219.93 90.276 216.617 90.276 Z M 216.616 95.276 C 222.691 95.276 227.616 90.351 227.616 84.276 C 227.616 78.201 222.691 73.276 216.616 73.276 Z"
						style="stroke-width: 0px; isolation: isolate;"></path>
					<path
						d="M 210.617 90.276 C 213.93 90.276 216.617 87.59 216.617 84.276 C 216.617 80.962 213.93 78.276 210.617 78.276"
						style="stroke-width: 0px; isolation: isolate; transform-box: fill-box; transform-origin: 50% 50%;"
						transform="matrix(-1, 0, 0, -1, 0.000008, 0.000004)"
					></path>
				</g>
			</svg>
			<ThemeDrawer
				class="pointer-events-none absolute top-[calc(100%+2px)] right-[-2px] h-fit w-fit overflow-hidden"
			/>
		</a>
		<div
			id="desktop-nav-active"
			class="border-accent bg-accent/20 pointer-events-none absolute top-0 left-0 -mt-[1px] -ml-[1px] h-[calc(100%+2px)] !rounded-none border opacity-0 blur-none transition-all duration-200 ease-in-out"
		>
		</div>
	</div>
</nav>

<script>
	function setActiveLink() {
		const activeBox = document.getElementById(
			"desktop-nav-active",
		) as HTMLElement;

		const navItems = document.getElementById(
			"desktop-nav-items",
		) as HTMLElement;

		const currentPath = "/" + window.location.pathname.split("/")[1];

		// Set initial position of activeBox
		if (activeBox.style.left == "0px") {
			activeBox.style.left = `${navItems.offsetLeft}px`;
		}

		// Remove active class from all links
		navItems.querySelectorAll("a").forEach((btn) => {
			btn.classList.remove("active");
			if (btn.getAttribute("href") === currentPath) {
				btn.classList.add("active");
			}
		});

		const activeButton = document.querySelector(
			".desktop-nav-button.active",
		) as HTMLElement;

		// Move activeBox to active nav button
		if (activeButton) {
			setTimeout(() => {
				const activeRect = activeButton.getBoundingClientRect();

				activeBox.style.width = `${activeRect.width + 1}px`;
				activeBox.style.left = `${activeButton.offsetLeft}px`;
				setTimeout(() => {
					activeBox.classList.add("opacity-75");
					activeBox.classList.remove("opacity-0");
				}, 150);
			}, 10);
		} else {
			activeBox.classList.add("opacity-0");
			activeBox.classList.remove("opacity-75");
			setTimeout(() => {
				activeBox.style.left = `0px`;
			}, 150);
		}
	}

	setActiveLink();
	document.addEventListener("astro:page-load", setActiveLink);
	document.addEventListener("resize", setActiveLink);
</script>

<script>
	function updateTitle() {
		const pageTitle = document.title;
		const titleElement = document.getElementById(
			"mobile-header-page-title",
		);

		if (titleElement) {
			setTimeout(() => {
				titleElement.textContent = pageTitle;
			}, 400);
		}
	}

	updateTitle();
	document.addEventListener("astro:after-swap", updateTitle);
</script>

<script>
	function loadScrolledValues() {
		// Initialise elements that change on scroll
		const nav: any = document.getElementById("desktop-nav")!;
		let scrollDistance = nav ? nav.offsetHeight : 200;

		const valuesElement = document.getElementById("header-value-store")!;

		// Use requestAnimationFrame for smoother animations
		let ticking = false;
		let lastScrollPos = window.scrollY;

		function updateHeaderScroll() {
			// Set upper and lower bounds
			let initialHeight = parseFloat(
				getComputedStyle(valuesElement).width,
			);
			let initialPadding = parseFloat(
				getComputedStyle(valuesElement).padding,
			);
			let initialBackground = 0;
			const finalHeight = parseFloat(
				getComputedStyle(valuesElement).height,
			);
			const finalPadding = parseFloat(
				getComputedStyle(valuesElement).margin,
			);
			const finalBackground = 100;

			// Get current scroll position
			let scrollPos = window.scrollY;

			// Calculate current sidebar width based on scroll position
			let navPadding, navHeight, navBackground;

			if (scrollPos >= scrollDistance) {
				navPadding = finalPadding;
				navHeight = finalHeight;
				navBackground = finalBackground;
			} else {
				// Linear interpolation between initial and final width
				let shrinkFactor = scrollPos / scrollDistance;

				navPadding =
					initialPadding -
					shrinkFactor * (initialPadding - finalPadding);
				navHeight =
					initialHeight -
					shrinkFactor * (initialHeight - finalHeight);
				navBackground =
					initialBackground -
					shrinkFactor * (initialBackground - finalBackground);
			}

			// Apply the new values
			nav.style.paddingTop = `${navPadding - 1}px`;
			nav.style.paddingBottom = `${navPadding - 2}px`;
			nav.style.paddingLeft = `${navPadding}px`;
			nav.style.paddingRight = `${navPadding}px`;
			nav.style.height = `${navHeight}px`;
			nav.style.backgroundColor = `oklch(var(--background-header)/${navBackground / 100 / 2})`;

			ticking = false;
		}
		// Handle scroll events more efficiently
		window.addEventListener("scroll", function () {
			lastScrollPos = window.scrollY;

			if (!ticking) {
				window.requestAnimationFrame(function () {
					updateHeaderScroll();
				});
				ticking = true;
			}
		});

		// Update initial width on window resize
		window.addEventListener("resize", function () {
			updateHeaderScroll();
		});
	}

	// Initial values load
	loadScrolledValues();
	document.addEventListener("astro:after-swap", function () {
		loadScrolledValues();
	});
</script>
