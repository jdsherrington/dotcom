---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import { extractOKLCHColors } from "../lib/extractOKLCHColors";
import CardTag from "./CardTag.astro";
import NavigationButton from "@/components/NavigationButton.astro";

interface Props {
	title: string;
	description: string;
	date: string;
	url: string;
	tags: string[];
	imagePath: string;
	imageAlt: string;
	wordCount: number;
	type: string;
}

const {
	title,
	description,
	date,
	url,
	tags,
	imagePath,
	imageAlt,
	type,
	wordCount,
} = Astro.props;

const formattedDate = new Date(date).toLocaleDateString("en-AU", {
	year: "numeric",
	month: "long",
	day: "2-digit",
});

const accentPalette: any = await extractOKLCHColors(imagePath);
const accent = accentPalette[0];

const readTime = Math.round(wordCount / 250);

const images = import.meta.glob<{ default: ImageMetadata }>(
	"/src/assets/blog/posts/*.{jpeg,jpg,png,gif,webp}",
);

if (!images[imagePath])
	throw new Error(
		`"${imagePath}" does not exist in glob: "src/assets/blog/posts/*"`,
	);
---

<div
	transition:name=`container-${url}`
	class="blog-post card"
	data-accent={accent}
	data-type={type}
>
	<a href={url} class="z-20">
		<div
			transition:name=`image${url}`
			class="blog-post-img"
			data-loaded="false"
		>
			<Image
				src={images[imagePath]()}
				alt={imageAlt}
				onload="this.parentElement.dataset.loaded = 'true'"
			/>
		</div>
	</a>
	<div transition:name=`accent-${url}` class="card-accent"></div>
	<div class="blog-post-content" 2>
		<small class="blog-post-featured">FEATURED POST</small>

		<a href={url}>
			<h1 class="blog-post-title" transition:name=`title-${url}`>
				{title}
			</h1>
		</a>

		<small transition:name=`date-${url}` class="blog-post-date"
			>// {formattedDate}
		</small>

		<p transition:name=`description-${url}` class="blog-post-description">
			{description}
		</p>

		<div transition:name=`tags-${url}` class="blog-post-tags">
			{tags?.map((tag: any) => <CardTag text={tag} collection="blog" />)}
		</div>
		<div class="blog-post-button">
			<NavigationButton
				link={url}
				text=`// ${readTime} min read`
				direction="forward"
				position="bottom-right"
			/>
		</div>
	</div>
</div>

<style is:global>
	.blog-post {
		@apply flex justify-self-center sm:max-w-[var(--full-w)] sm:flex-row sm:gap-[var(--guide-gutter)] md:max-w-none md:flex-col md:gap-[var(--guide-gutter)];

		--accent-foreground: from oklch(var(--accent)) var(--shade-foreground) c
			h;
		--accent-background: from oklch(var(--accent)) var(--shade-background) c
			h;
	}

	.blog-post::before {
		@apply hover:bg-accent-background/25;
	}

	.blog-post[data-type="featured"] {
		@apply flex-row gap-[var(--guide-gutter)] sm:col-span-1 md:col-span-2 lg:col-span-3;
	}

	.blog-post:has(a:hover)::before {
		@apply opacity-100 duration-300;
	}

	.blog-post[data-type="featured"] a:has(.blog-post-img) {
		@apply w-min shadow-2xl shadow-transparent transition-all duration-300;
	}

	a:has(.blog-post-img) {
		@apply w-min shadow-2xl shadow-transparent transition-all duration-300 sm:m-0 sm:h-auto md:mb-0 md:ml-0 md:mt-0 md:w-auto;
	}

	.blog-post[data-type="featured"] .blog-post-img {
		@apply sm:h-full sm:min-h-[var(--half-w)] sm:w-[calc(var(--half-w))] md:max-h-none lg:min-h-[var(--five-w)];
	}

	.blog-post-img {
		@apply pointer-events-none overflow-hidden opacity-75 sm:h-full sm:w-[calc(var(--one-w)-1px)] md:h-[calc(var(--two-w)-1px)] md:max-h-36 md:w-full;
	}

	.blog-post-img img {
		@apply absolute left-0 top-0 h-full max-h-full w-full object-cover transition-all duration-500 ease-in-out sm:rounded-r-none md:rounded-b-none md:rounded-tl;
	}

	.blog-post[data-type="featured"] .blog-post-img img {
		@apply rounded-r-none;
	}

	.blog-post:hover blog-post-img {
		@apply opacity-80;
	}

	.blog-post[data-type="featured"] .blog-post-content {
		@apply justify-center pl-0;
	}

	.blog-post-content {
		@apply z-20 flex h-full w-full flex-col place-content-start content-center justify-between sm:pl-0 sm:pr-[calc(var(--guide-gutter)*1)] sm:pt-[var(--guide-gutter)] md:pl-[var(--guide-gutter)] md:pr-[var(--guide-gutter)] md:pt-0;
	}

	.blog-post-content * {
		@apply max-w-full;
	}

	.blog-post[data-type="featured"] .blog-post-featured {
		@apply block h-min max-w-full place-content-start pb-2 font-mono text-xs tracking-widest text-foreground/50;
	}

	.blog-post-featured {
		@apply hidden;
	}

	.blog-post[data-type="featured"] .blog-post-title {
		@apply font-bold sm:mt-[calc(var(--guide-gutter)*0.1)] sm:text-2xl md:text-2xl lg:text-3xl;
	}

	.blog-post-title {
		@apply inline h-min w-fit text-pretty font-bold !leading-[1.2] tracking-tight text-[oklch(var(--foreground)/0.85)] transition-colors duration-300 ease-in-out hover:text-foreground sm:text-xl;
	}

	.blog-post-date {
		@apply mb-1 mt-0.5 h-min w-auto transform-none place-content-start py-1 pr-4 font-mono text-xs uppercase tracking-widest text-foreground/50 transition-colors duration-300 ease-in-out;
	}

	.blog-post[data-type="featured"] .blog-post-description {
		@apply line-clamp-3 pr-[var(--guide-gutter)];
	}

	.blog-post-description {
		@apply h-min w-auto place-content-start text-pretty text-[0.875rem] text-foreground/70 sm:mb-[var(--guide-gutter)] sm:hidden sm:pr-[calc(var(--guide-gutter)*2.5)] md:mb-[calc(var(--guide-gutter)*0.5)] md:line-clamp-3 md:pr-[calc(var(--guide-gutter)*1)];
	}

	.blog-post[data-type="featured"] .blog-post-tags {
		@apply flex-grow-0 sm:mb-[var(--guide-gutter)] sm:flex sm:pb-0 md:mb-0;
	}

	.blog-post-tags {
		@apply justify-start pb-[calc(var(--guide-gutter)*0.5)];
	}

	.blog-post-button {
		@apply inline-flex h-auto w-full justify-end justify-self-end pb-[calc(var(--guide-gutter)*0.5)];
	}

	.blog-post[data-type="featured"] .blog-post-button {
		@apply absolute bottom-[calc(var(--guide-gutter)*0.5)] right-[var(--guide-gutter)] w-auto pb-0;
	}

	.blog-post .navigation-button {
		@apply static bg-foreground/0 px-0 py-[calc(var(--guide-gutter)*0.5)] text-foreground/60 backdrop-blur-none transition-all duration-200 ease-in-out sm:hidden md:flex;
	}

	.blog-post:hover .navigation-button {
		@apply text-foreground/80 hover:bg-transparent hover:text-accent-foreground;
	}

	.blog-post-arrow {
		@apply h-5 !fill-foreground/25 transition-colors duration-300 ease-in-out hover:!fill-accent-foreground;
	}

	.blog-post:hover .blog-post-arrow {
		@apply !fill-accent hover:!fill-accent-foreground;
	}

	/* .inline-back-arrow { */
	/* 	@apply  mb-[4px] mr-[calc(var(--guide-gutter)/2)] h-5; */
	/* } */
</style>

<script>
	// const handleOnMouseMove = (e: MouseEvent) => {
	// 	const target = e.currentTarget as HTMLElement;
	//
	// 	if (!target) return;
	//
	// 	const rect = target.getBoundingClientRect();
	// 	const x = e.clientX - rect.left;
	// 	const y = e.clientY - rect.top;
	//
	// 	target.style.setProperty("--mouse-x", `${x}px`);
	// 	target.style.setProperty("--mouse-y", `${y}px`);
	// };

	const attachEventListeners = () => {
		// Add mousemove event listeners to blog posts
		// document.querySelectorAll<HTMLElement>(".blog-post").forEach((post) => {
		// 	post.onmousemove = (e) => handleOnMouseMove(e);
		// });

		// Set post accents
		document.querySelectorAll<HTMLElement>(".blog-post").forEach((post) => {
			post.style.setProperty("--accent", `${post.dataset.accent}`);
		});

		// Style featured post accent
		const featuredCard = document.querySelector<HTMLElement>(
			".card[data-type='featured']",
		);
		if (featuredCard) {
			featuredCard.classList.add("featured");
		}

		const featuredAccent = document.querySelector<HTMLElement>(
			".blog-post[data-type='featured'] .card-accent",
		);
		if (featuredAccent) {
			featuredAccent.classList.add("featured");
		}
	};

	// Attach initial event listeners
	attachEventListeners();

	document.addEventListener("astro:page-load", () => {
		attachEventListeners();
	});

	document.addEventListener("astro:after-swap", () => {
		attachEventListeners();
	});
</script>
