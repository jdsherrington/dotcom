---
import ThemeDrawer from "@/components/ThemeDrawer.astro";
import { Icon } from "astro-icon/components";
---

<div
	class="mobile-nav-container fixed bottom-0 z-1000 inline-flex flex-col place-items-end gap-2 p-[calc(var(--guide-gutter)-0.25rem)] sm:right-[calc(var(--col-margin)+1px)] xl:right-[calc(var(--col-absolute-margin)+1px)]"
>
	<div
		class="mobile-nav-backdrop sm:before:bg-background-secondary/75 pointer-events-none absolute right-0 bottom-0 -z-2 h-[calc(100%*3)] w-[calc(100%*3)] before:absolute before:right-0 before:bottom-0 before:-z-1 before:h-full before:w-full before:opacity-0 before:transition-opacity before:duration-200 before:ease-in-out before:content-[''] group-has-[.mobile-nav-items.open]/mobilenav:before:opacity-100 before:md:bg-transparent"
	>
	</div>
	<a class="mobile-nav-button page-top-button">
		<Icon class="page-top-icon" name="ui/page-top" />
	</a>
	<div class="mobile-nav-menu">
		<div class="mobile-nav-items">
			<a class="mobile-nav-button mobile-nav-link" href="/blog">Blog</a>
			<a class="mobile-nav-button mobile-nav-link" href="/projects"
				>Projects</a
			>
			<a class="mobile-nav-button mobile-nav-link" href="/resources"
				>Resources</a
			>
			<div class="menu-wrapper">
				<a
					class="menu-btn mobile-nav-button mobile-nav-link"
					href="javascript:void(0)">Theme</a
				>
				<ThemeDrawer />
			</div>
		</div>
		<a class="mobile-nav-button nav-menu-button">
			<Icon class="nav-menu-icon" name="ui/hamburger" />
			<Icon class="nav-menu-close" name="ui/close" />
		</a>
	</div>
</div>

<style is:global>
	@reference "../styles/global.css";
	.mobile-nav-backdrop {
		mask: radial-gradient(
			ellipse 100% 100% at 100% 100%,
			rgba(0, 0, 0, 1) 50%,
			rgba(0, 0, 0, 0) 100%
		);
	}

	.page-top-button {
		@apply md:hover:bg-background-primary pointer-events-auto flex aspect-square place-content-center place-items-center !p-0 opacity-100 blur-none transition-all duration-300 ease-in-out sm:h-14 sm:w-14 md:h-12 md:w-12;
	}

	.page-top-button.hidden {
		@apply pointer-events-none opacity-0 md:blur-md;
	}

	.mobile-nav-container:has(.mobile-nav-items.open) .page-top-button {
		@apply !pointer-events-none !opacity-0;
	}

	.page-top-button:hover .page-top-icon {
		@apply md:text-foreground;
	}

	.page-top-icon {
		@apply w-full transition-colors duration-300 ease-in-out sm:h-2.5 md:h-2;
	}

	.mobile-nav-menu {
		@apply flex-col place-items-end sm:inline-flex md:hidden;
	}

	.mobile-nav-items {
		@apply pointer-events-none absolute right-[calc(var(--guide-gutter)-0.25rem)] bottom-12 z-50 mb-[calc(var(--guide-gutter)*2)] inline-flex translate-x-[150%] flex-col place-items-end gap-2 font-mono uppercase transition-all duration-300 ease-in-out;
	}

	.mobile-nav-items.open {
		@apply pointer-events-auto translate-x-0;
	}

	.mobile-nav-button {
		@apply border-border-background bg-background-primary/30 text-foreground/80 rounded-base relative inline-block w-min border border-r-0 px-4 py-3 text-right tracking-wider shadow-lg shadow-black/10 backdrop-blur-xl transition-all duration-300 ease-in-out;
	}

	.mobile-nav-link.active {
		@apply border-accent-foreground/50 bg-background-primary text-accent-foreground;
	}

	.nav-menu-button {
		@apply flex aspect-square !h-14 !w-14 place-content-center place-items-center p-0;
	}

	.nav-menu-button svg {
		@apply absolute top-[50%] left-[50%] h-6 w-6 -translate-x-[50%] -translate-y-[50%];
	}

	.nav-menu-icon {
		@apply opacity-100 blur-none;
	}

	.mobile-nav-menu:has(.mobile-nav-items.open) .nav-menu-icon {
		@apply opacity-0 blur-sm;
	}

	.nav-menu-close {
		@apply opacity-0 blur-sm;
	}

	.mobile-nav-menu:has(.mobile-nav-items.open) .nav-menu-close {
		@apply opacity-100 blur-none;
	}

	.mobile-nav-menu .theme-drawer {
		@apply border-foreground/5 bg-background-midpoint right-0 bottom-0 translate-y-4 flex-col border blur-none;
	}

	.mobile-nav-menu:has(.mobile-nav-items.open) .theme-drawer {
		@apply translate-x-0;
	}

	.mobile-nav-menu .theme-drawer::before {
		@apply bg-transparent backdrop-blur-none;
	}

	.mobile-nav-menu .theme-drawer::after {
		@apply !bg-transparent opacity-0;
	}

	.mobile-nav-menu .theme-drawer.open {
		@apply translate-y-0;
	}

	.mobile-nav-menu .theme-drawer li * {
		@apply text-sm;
	}

	.mobile-nav-menu:has(.theme-drawer.open)
		.mobile-nav-link:not(.mobile-theme-toggle) {
		@apply pointer-events-none opacity-0;
	}
</style>

<script>
	function scrollToTopButton() {
		const scrollButton = document.querySelector(".page-top-button");
		if (!scrollButton) return;

		const topElement = document.querySelector("#top-marker");
		if (!topElement) return;

		if (window.scrollY === 0) {
			scrollButton.classList.add("hidden");
		}

		const observer = new IntersectionObserver(
			(entries) => {
				const entry = entries[0];
				if (entry.isIntersecting) {
					scrollButton.classList.add("hidden");
				} else {
					scrollButton.classList.remove("hidden");
				}
			},
			{ threshold: 0, rootMargin: "-10px 0px 0px 0px" },
		);

		observer.observe(topElement);

		scrollButton.addEventListener("click", () => {
			window.scrollTo({ top: 0, behavior: "smooth" });
		});

		return observer;
	}

	let scrollObserver = scrollToTopButton();

	document.addEventListener("astro:after-swap", () => {
		if (scrollObserver) {
			scrollObserver.disconnect();
		}

		scrollObserver = scrollToTopButton();
	});
</script>

<script>
	function openNavMenu() {
		const menuButton = document.querySelector(
			".nav-menu-button",
		) as HTMLElement;
		const menuItems = document.querySelector(
			".mobile-nav-items",
		) as HTMLElement;
		const themeDrawer = document.querySelector(
			".mobile-nav-container .theme-drawer",
		) as HTMLElement;

		menuButton.addEventListener("click", () => {
			if (menuItems.classList.contains("open")) {
				if (themeDrawer.classList.contains("open")) {
					themeDrawer.classList.remove("open");
				} else {
					menuItems.classList.remove("open");
				}
			} else {
				menuItems.classList.add("open");
			}
		});
	}
	openNavMenu();
	document.addEventListener("astro:after-swap", openNavMenu);
</script>

<script>
	function openMobileThemeDrawer() {
		const themeToggle = document.querySelector(
			".theme-toggle",
		) as HTMLElement;
		const themeDrawer = document.querySelector(
			".mobile-nav-container .theme-drawer",
		) as HTMLElement;

		themeToggle.addEventListener("click", () => {
			if (themeDrawer.classList.contains("open")) {
				themeDrawer.classList.remove("open");
			} else {
				themeDrawer.classList.add("open");
			}
		});
	}
	openMobileThemeDrawer();
	document.addEventListener("astro:after-swap", openMobileThemeDrawer);
</script>

<script data-astro-rerun>
	document.addEventListener("click", (e) => {
		if (
			!document.querySelector(".mobile-nav-menu").contains(e.target) &&
			document
				.querySelector(".mobile-nav-items")
				.classList.contains("open")
		) {
			document
				.querySelector(".mobile-nav-items")
				.classList.remove("open");
			document
				.querySelector(".mobile-nav-container .theme-drawer")
				.classList.remove("open");
		}
	});
</script>

<script>
	function setActiveMobileLink() {
		const currentPath = "/" + window.location.pathname.split("/")[1];
		// "/projects"

		// Remove active class from all links
		document.querySelectorAll(".mobile-nav-link").forEach((btn) => {
			btn.classList.remove("active");
			if (btn.getAttribute("href") === currentPath) {
				btn.classList.add("active");
			}
		});
	}

	setActiveMobileLink();
	document.addEventListener("astro:after-swap", setActiveMobileLink);
</script>
